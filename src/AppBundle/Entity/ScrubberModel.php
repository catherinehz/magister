<?php

namespace AppBundle\Entity;

class ScrubberModel
{

    /**
     * @var Device
     */
    private $device;

    public function __construct(Device $device)
    {
        $this->device = $device;
    }

    public function transferFunction() {
        //Device data = завдання об'єкту
        $c = $this->device->getConfig();

        //Last record data = поточний стан об'єкту
        $lastRecord = $device->getRecords()->first();
        $rd = $lastRecord->getData();

        //Kx1y1
        $numerator = $rd['S']*$rd['Kg']*$rd['m'];
        $denominator = (2*$rd['C2H2-Fg']) + ($rd['S']*$rd['Kg']);
        $Kx1y1 = $numerator/$denominator;

        //KFrx1
        $numerator = 2*($rd['CO2-in-NaOH-x1']-$rd['CO2-in-NaOH-x0']);
        $denominator = (2*$rd['C2H2-Fg']) + ($rd['S']*$rd['Kg']);
        $KFrx1 =  $numerator/$denominator;

        //Ky1x1
        $numerator = $rd['S']*$rd['Kr'];
        $denominator = $rd['m']*((2*$rd['C2H2-Fg']) + ($rd['S']*$rd['Kg']));
        $Ky1x1 =  $numerator/$denominator;

        //Ty1
        $numerator = $rd['Vg']*$rd['Pg'];
        $denominator = (2*$rd['C2H2-Fg']) + ($rd['S']*$rd['Kg']);
        $Ty1 =  $numerator/$denominator;

        //Tx1
        $numerator = $rd['Vr']*$rd['Pr'];
        $denominator = (2*$rd['NaOH-Fr']) + ($rd['S']*$rd['Kr']);
        $Tx1 =  $numerator/$denominator;

        //WFr
        $numerator = $Kx1y1*$KFrx1;
        $denominator = ($Kx1y1*$Ky1x1) - (($Ty1+1)*($Tx1+1));
        $WFr = $numerator/$denominator;

        return $WFr;
    }

    /**
     * Передатна функція (розрахунок вихіного СО2 в залежності від витрати NaOH)
     * @param array $newValues <- витрата NaOH встановлена PID-регулятором <br/>
     * Або останнє значення отримане від об'єкту керування
     * @return float
     */
    public function mathModel($values = null) {
        //Отримання вхідних даних
        if ($values) {
            $v = $values;
        } else {
            $v = $this->device->getRecords()->last()->getData();
        }

        //Розрахунок вихідного значення конц. СО2
        //Kx1y1
        $numerator = $v['S']*$v['Kg']*$v['m'];
        $denominator = (2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']);
        $Kx1y1 = $numerator/$denominator;

        //KFrx1
        $numerator = 2*($v['CO2-in-NaOH-x1']-$v['CO2-in-NaOH-x0']);
        $denominator = (2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']);
        $KFrx1 =  $numerator/$denominator;

        //Ky1x1
        $numerator = $v['S']*$v['Kr'];
        $denominator = $v['m']*((2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']));
        $Ky1x1 =  $numerator/$denominator;

        //Ky0x1
        $numerator = $v['S']*$v['Kr'];
        $denominator = $v['m']*((2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']));
        $Ky0x1 =  $numerator/$denominator;

        //Ty1
        $numerator = $v['Vg']*$v['Pg'];
        $denominator = (2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']);
        $Ty1 =  $numerator/$denominator;

        //Ty0
        $numerator = $v['Vg']*$v['Pg'];
        $denominator = (2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']);
        $Ty0 =  $numerator/$denominator;

        //Tx1
        $numerator = $v['Vr']*$v['Pr'];
        $denominator = (2*$v['NaOH-Fr']) + ($v['S']*$v['Kr']);
        $Tx1 =  $numerator/$denominator;

        //$y1
        $num1 = (($Ty0+$Ky0x1)*($Tx1+1))-($Kx1y1*$Ky0x1);
        $den1 = ($Tx1+1);
        $res1 = ($num1/$den1) * $v['CO2-in-C2H2-y0'];

        $num2 = $Kx1y1*$KFrx1;
        $den2 = ($Tx1+1);
        $res2 = ($num2/$den2) * $v['NaOH-Fr'];

        $num3 = ($Kx1y1*$Ky1x1)-(($Ty1+1)*($Tx1+1));
        $den3 = ($Tx1+1);
        $res3 = ($num3/$den3);

        $y1 = ($res1 + $res2) / $res3; // CO2 кг/м.куб.
        //if ($y1 < 0) $y1 = 0;

        return $y1;
    }

    /**
     * Передатна функція (розрахунок вихіного СО2 в залежності від витрати NaOH)
     * @param array $newValues <- витрата NaOH встановлена PID-регулятором <br/>
     * Або останнє значення отримане від об'єкту керування
     * @return float
     */
public function mathModelNew($values = null) {
    //Отримання вхідних даних
    if ($values) {
        $v = $values;
    } else {
        $v = $this->device->getRecords()->last()->getData();
    }

    //Розрахунок вихідного значення конц. СО2
    //Kx1y1
    $numerator = $v['S']*$v['Kg']*$v['m'];
    $denominator = (2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']);
    $Kx1y1 = $numerator/$denominator;

    //KFrx1
    $numerator = 2*($v['CO2-in-NaOH-x1']-$v['CO2-in-NaOH-x0']);
    $denominator = (2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']);
    $KFrx1 =  $numerator/$denominator;

    //Ky1x1
    $numerator = $v['S']*$v['Kr'];
    $denominator = $v['m']*((2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']));
    $Ky1x1 =  $numerator/$denominator;

    //Ky0x1
    $numerator = $v['S']*$v['Kr'];
    $denominator = $v['m']*((2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']));
    $Ky0x1 =  $numerator/$denominator;

    //Ky0y1
    $numerator = (2*$v['C2H2-Fg']) - $v['S']*$v['Kg'];
    $denominator = (2*$v['C2H2-Fg']) + $v['S']*$v['Kg'];
    $Ky0y1 =  $numerator/$denominator;

    //Ty1
    $numerator = $v['Vg']*$v['Pg'];
    $denominator = (2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']);
    $Ty1 =  $numerator/$denominator;

    //Ty0
    $numerator = $v['Vg']*$v['Pg'];
    $denominator = (2*$v['C2H2-Fg']) + ($v['S']*$v['Kg']);
    $Ty0 =  $numerator/$denominator;

    //Tx1
    $numerator = $v['Vr']*$v['Pr'];
    $denominator = (2*$v['NaOH-Fr']) + ($v['S']*$v['Kr']);
    $Tx1 =  $numerator/$denominator;

    //$y1
    $num1 = $Kx1y1*$KFrx1;
    $den1 = ($Kx1y1*$Ky1x1)-(($Ty1+1)*($Tx1+1));
    $res1 = ($num1/$den1);

    $num2 = (($Ty0+$Ky0y1)*($Tx1+1))-($Kx1y1*$Ky0x1);
    $den2 = ($Kx1y1*$Ky1x1)-(($Ty1+1)*($Tx1+1));
    $res2 = ($num1/$den1);

    $y1 = $res1 + $res2; // CO2 кг/м.куб.

    return $y1;
}

    /**
     *
     * @param array $newValues <- витрата NaOH встановлена PID-регулятором
     * @return float
     */
    public static function mathModelMock($NaOH) {
        $index = (string)floor($NaOH);
        $arr = self::_getMock();

        if (!isset($arr[$index])) {
            if ($NaOH < 695) {
                //return 0.06;
                $diff=695-$NaOH;
                $res = 0.05975 + (0.001*$diff);
                        
                return $res;
            } else {
                return 0;
            }
        } else {
            return $arr[$index];
        }
    }

    private static function _getMock() {
        return [
'695' => 0.05975,
'696' => 0.0596,
'697' => 0.05945,
'698' => 0.0593,
'699' => 0.05915,
'700' => 0.059,
'701' => 0.05885,
'702' => 0.0587,
'703' => 0.05855,
'704' => 0.0584,
'705' => 0.05825,
'706' => 0.0581,
'707' => 0.05795,
'708' => 0.0578,
'709' => 0.05765,
'710' => 0.0575,
'711' => 0.05735,
'712' => 0.0572,
'713' => 0.05705,
'714' => 0.0569,
'715' => 0.05675,
'716' => 0.0566,
'717' => 0.05645,
'718' => 0.0563,
'719' => 0.05615,
'720' => 0.056,
'721' => 0.05585,
'722' => 0.0557,
'723' => 0.05555,
'724' => 0.0554,
'725' => 0.05525,
'726' => 0.0551,
'727' => 0.05495,
'728' => 0.0548,
'729' => 0.05465,
'730' => 0.0545,
'731' => 0.05435,
'732' => 0.0542,
'733' => 0.05405,
'734' => 0.0539,
'735' => 0.05375,
'736' => 0.0536,
'737' => 0.05345,
'738' => 0.0533,
'739' => 0.05315,
'740' => 0.053,
'741' => 0.05285,
'742' => 0.0527,
'743' => 0.05255,
'744' => 0.0524,
'745' => 0.05225,
'746' => 0.0521,
'747' => 0.05195,
'748' => 0.0518,
'749' => 0.05165,
'750' => 0.0515,
'751' => 0.05135,
'752' => 0.0512,
'753' => 0.05105,
'754' => 0.0509,
'755' => 0.05075,
'756' => 0.0506,
'757' => 0.05045,
'758' => 0.0503,
'759' => 0.05015,
'760' => 0.05,
'761' => 0.04985,
'762' => 0.0497,
'763' => 0.04955,
'764' => 0.0494,
'765' => 0.04925,
'766' => 0.0491,
'767' => 0.04895,
'768' => 0.0488,
'769' => 0.04865,
'770' => 0.0485,
'771' => 0.04835,
'772' => 0.0482,
'773' => 0.04805,
'774' => 0.0479,
'775' => 0.04775,
'776' => 0.0476,
'777' => 0.04745,
'778' => 0.0473,
'779' => 0.04715,
'780' => 0.047,
'781' => 0.04685,
'782' => 0.0467,
'783' => 0.04655,
'784' => 0.0464,
'785' => 0.04625,
'786' => 0.0461,
'787' => 0.04595,
'788' => 0.0458,
'789' => 0.04565,
'790' => 0.0455,
'791' => 0.04535,
'792' => 0.0452,
'793' => 0.04505,
'794' => 0.0449,
'795' => 0.04475,
'796' => 0.0446,
'797' => 0.04445,
'798' => 0.0443,
'799' => 0.04415,
'800' => 0.044,
'801' => 0.04385,
'802' => 0.0437,
'803' => 0.04355,
'804' => 0.0434,
'805' => 0.04325,
'806' => 0.0431,
'807' => 0.04295,
'808' => 0.0428,
'809' => 0.04265,
'810' => 0.0425,
'811' => 0.04235,
'812' => 0.0422,
'813' => 0.04205,
'814' => 0.0419,
'815' => 0.04175,
'816' => 0.0416,
'817' => 0.04145,
'818' => 0.0413,
'819' => 0.04115,
'820' => 0.041,
'821' => 0.04085,
'822' => 0.0407,
'823' => 0.04055,
'824' => 0.0404,
'825' => 0.04025,
'826' => 0.0401,
'827' => 0.03995,
'828' => 0.0398,
'829' => 0.03965,
'830' => 0.0395,
'831' => 0.03935,
'832' => 0.0392,
'833' => 0.03905,
'834' => 0.0389,
'835' => 0.03875,
'836' => 0.0386,
'837' => 0.03845,
'838' => 0.0383,
'839' => 0.03815,
'840' => 0.038,
'841' => 0.03785,
'842' => 0.0377,
'843' => 0.03755,
'844' => 0.0374,
'845' => 0.03725,
'846' => 0.0371,
'847' => 0.03695,
'848' => 0.0368,
'849' => 0.03665,
'850' => 0.0365,
'851' => 0.03635,
'852' => 0.0362,
'853' => 0.03605,
'854' => 0.0359,
'855' => 0.03575,
'856' => 0.0356,
'857' => 0.03545,
'858' => 0.0353,
'859' => 0.03515,
'860' => 0.035,
'861' => 0.03485,
'862' => 0.0347,
'863' => 0.03455,
'864' => 0.0344,
'865' => 0.03425,
'866' => 0.0341,
'867' => 0.03395,
'868' => 0.0338,
'869' => 0.03365,
'870' => 0.0335,
'871' => 0.03335,
'872' => 0.0332,
'873' => 0.03305,
'874' => 0.0329,
'875' => 0.03275,
'876' => 0.0326,
'877' => 0.03245,
'878' => 0.0323,
'879' => 0.03215,
'880' => 0.032,
'881' => 0.03185,
'882' => 0.0317,
'883' => 0.03155,
'884' => 0.0314,
'885' => 0.03125,
'886' => 0.0311,
'887' => 0.03095,
'888' => 0.0308,
'889' => 0.03065,
'890' => 0.0305,
'891' => 0.03035,
'892' => 0.0302,
'893' => 0.03005,
'894' => 0.0299,
'895' => 0.02975,
'896' => 0.0296,
'897' => 0.02945,
'898' => 0.0293,
'899' => 0.02915,
'900' => 0.029,
'901' => 0.02885,
'902' => 0.0287,
'903' => 0.02855,
'904' => 0.0284,
'905' => 0.02825,
'906' => 0.0281,
'907' => 0.02795,
'908' => 0.0278,
'909' => 0.02765,
'910' => 0.0275,
'911' => 0.02735,
'912' => 0.0272,
'913' => 0.02705,
'914' => 0.0269,
'915' => 0.02675,
'916' => 0.0266,
'917' => 0.02645,
'918' => 0.0263,
'919' => 0.02615,
'920' => 0.026,
'921' => 0.02585,
'922' => 0.0257,
'923' => 0.02555,
'924' => 0.0254,
'925' => 0.02525,
'926' => 0.0251,
'927' => 0.02495,
'928' => 0.0248,
'929' => 0.02465,
'930' => 0.0245,
'931' => 0.02435,
'932' => 0.0242,
'933' => 0.02405,
'934' => 0.0239,
'935' => 0.02375,
'936' => 0.0236,
'937' => 0.02345,
'938' => 0.0233,
'939' => 0.02315,
'940' => 0.023,
'941' => 0.02285,
'942' => 0.0227,
'943' => 0.02255,
'944' => 0.0224,
'945' => 0.02225,
'946' => 0.0221,
'947' => 0.02195,
'948' => 0.0218,
'949' => 0.02165,
'950' => 0.0215,
'951' => 0.02135,
'952' => 0.0212,
'953' => 0.02105,
'954' => 0.0209,
'955' => 0.02075,
'956' => 0.0206,
'957' => 0.02045,
'958' => 0.0203,
'959' => 0.02015,
'960' => 0.02,
'961' => 0.01987,
'962' => 0.01974,
'963' => 0.01961,
'964' => 0.01948,
'965' => 0.01935,
'966' => 0.01922,
'967' => 0.01909,
'968' => 0.01896,
'969' => 0.01883,
'970' => 0.0187,
'971' => 0.01857,
'972' => 0.01844,
'973' => 0.01831,
'974' => 0.01818,
'975' => 0.01805,
'976' => 0.01792,
'977' => 0.01779,
'978' => 0.01766,
'979' => 0.01753,
'980' => 0.0174,
'981' => 0.01727,
'982' => 0.01714,
'983' => 0.01701,
'984' => 0.01688,
'985' => 0.01675,
'986' => 0.01662,
'987' => 0.01649,
'988' => 0.01636,
'989' => 0.01623,
'990' => 0.0161,
'991' => 0.01597,
'992' => 0.01584,
'993' => 0.01571,
'994' => 0.01558,
'995' => 0.01545,
'996' => 0.01532,
'997' => 0.01519,
'998' => 0.01506,
'999' => 0.01493,
'1000' => 0.0148,
'1001' => 0.01467,
'1002' => 0.01454,
'1003' => 0.01441,
'1004' => 0.01428,
'1005' => 0.01415,
'1006' => 0.01402,
'1007' => 0.01389,
'1008' => 0.01376,
'1009' => 0.01363,
'1010' => 0.0135,
'1011' => 0.01337,
'1012' => 0.01324,
'1013' => 0.01311,
'1014' => 0.01298,
'1015' => 0.01285,
'1016' => 0.01272,
'1017' => 0.01259,
'1018' => 0.01246,
'1019' => 0.01233,
'1020' => 0.0122,
'1021' => 0.01207,
'1022' => 0.01194,
'1023' => 0.01181,
'1024' => 0.01168,
'1025' => 0.01155,
'1026' => 0.01142,
'1027' => 0.01129,
'1028' => 0.01116,
'1029' => 0.01103,
'1030' => 0.0109,
'1031' => 0.01077,
'1032' => 0.01064,
'1033' => 0.01051,
'1034' => 0.01038,
'1035' => 0.01025,
'1036' => 0.01012,
'1037' => 0.00999,
'1038' => 0.00986,
'1039' => 0.00973,
'1040' => 0.0096,
'1041' => 0.00947,
'1042' => 0.00934,
'1043' => 0.00921,
'1044' => 0.00908,
'1045' => 0.00895,
'1046' => 0.00882,
'1047' => 0.00869,
'1048' => 0.00856,
'1049' => 0.00843,
'1050' => 0.0083,
'1051' => 0.00817,
'1052' => 0.00804,
'1053' => 0.00791,
'1054' => 0.00778,
'1055' => 0.00765,
'1056' => 0.00752,
'1057' => 0.00739,
'1058' => 0.00726,
'1059' => 0.00713,
'1060' => 0.007,
'1061' => 0.00687,
'1062' => 0.00674,
'1063' => 0.00661,
'1064' => 0.00648,
'1065' => 0.00635,
'1066' => 0.00622,
'1067' => 0.00609,
'1068' => 0.00596,
'1069' => 0.00583,
'1070' => 0.0057,
'1071' => 0.00557,
'1072' => 0.00544,
'1073' => 0.00531,
'1074' => 0.00518,
'1075' => 0.00505,
'1076' => 0.00492,
'1077' => 0.00479,
'1078' => 0.00466,
'1079' => 0.00453,
'1080' => 0.0044,
'1081' => 0.00427,
'1082' => 0.00414,
'1083' => 0.00401,
'1084' => 0.00388,
'1085' => 0.00375,
'1086' => 0.00362,
'1087' => 0.00349,
'1088' => 0.00336,
'1089' => 0.00323,
'1090' => 0.0031,
'1091' => 0.00297,
'1092' => 0.00284,
'1093' => 0.00271,
'1094' => 0.00258,
'1095' => 0.00245,
'1096' => 0.00232,
'1097' => 0.00219,
'1098' => 0.00206,
'1099' => 0.00193,
'1100' => 0.0018,
'1101' => 0.00167,
'1102' => 0.00154,
'1103' => 0.00141,
'1104' => 0.00128,
'1105' => 0.00115,
'1106' => 0.00102,
'1107' => 0.00089,
'1108' => 0.00076,
'1109' => 0.00063,
'1110' => 0.0005,
'1111' => 0.00037,
'1112' => 0.00024,
'1113' => 0.00011];
    }
}
